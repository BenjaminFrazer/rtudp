# rtudp.pyi

from typing import Optional, Tuple, Dict

class RtUdp:
    def __init__(self,
                 local_ip: str,
                 local_port: int,
                 remote_ip: str,
                 remote_port: int,
                 bind: int = ...,
                 connect: int = ...,
                 capacity: int = ...,
                 name: str = ...,
                 direction: int = ...,
                 cpu: int = ...,
                 timeout: int = ...) -> None: ...

    def init_socket(self) -> None: ...
    def close_socket(self) -> None: ...
    def start(self) -> None: ...
    def stop(self) -> None: ...
    def is_running(self) -> bool: ...
    def purge(self) -> None: ...

    def send_data(self, data: bytes, timestamp: Optional[int] = ...) -> None: ...
    def receive_data(self, timeout_ns: int) -> Tuple[bytes, int]: ...
    def receive_batch(self, n_packets: int, timeout_ns: int) -> Tuple[bytes, int]: ...

    def get_packet_stats(self) -> Dict[str, int]: ...
    def get_send_length(self) -> int: ...
    def get_receive_length(self) -> int: ...

# Module-level exports
__all__: list[str]
